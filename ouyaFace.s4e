include:
#include <s3eTypes.h>

/*
 * @brief The type of the controller events.
 */
enum  OuyaControllerEvent
{
  OUYA_CONTROLLER_MOTION_EVENT, // analog stick action
  OUYA_CONTROLLER_BUTTON_EVENT, // buttons
  kNumOuyaControllerEvents
};

/*
 * @brief Controller button id values.
 * @note  the use of AXIS_L2/R2 is supported; BUTTON_L2/R2 is deprecated.
 */
enum  OuyaControllerButtonId
{
  OUYA_CONTROLLER_BUTTON_DPAD_UP = 19,
  OUYA_CONTROLLER_BUTTON_DPAD_DOWN = 20,
  OUYA_CONTROLLER_BUTTON_DPAD_LEFT = 21,
  OUYA_CONTROLLER_BUTTON_DPAD_RIGHT = 22,
  OUYA_CONTROLLER_BUTTON_O = 96,
  OUYA_CONTROLLER_BUTTON_U = 99,
  OUYA_CONTROLLER_BUTTON_Y = 100,
  OUYA_CONTROLLER_BUTTON_A = 97,
  OUYA_CONTROLLER_BUTTON_L1 = 102,
  OUYA_CONTROLLER_BUTTON_R1 = 103,
  OUYA_CONTROLLER_BUTTON_L2 = 104,
  OUYA_CONTROLLER_BUTTON_R2 = 105,
  OUYA_CONTROLLER_BUTTON_L3 = 106,
  OUYA_CONTROLLER_BUTTON_R3 = 107,
  kNumControllerButtons
};

/*
 * @brief System data of an OUYA_CONTROLLER_MOTION_EVENT
 */
struct  OuyaControllerMotionEvent
{
  uint32  controllerId;
  uint32  playerId;
  float   xLeft;
  float   yLeft;
  float   xRight;
  float   yRight;
  float   trigLeft;
  float   trigRight;
};

/*
 * @brief System data of an OUYA_CONTROLLER_BUTTON_EVENT
 */
struct  OuyaControllerButtonEvent
{
  uint32  controllerId;
  uint32  playerId;
  uint32  buttonId;
  uint32  isPressed;
};

/*
  @brief  Error codes returned from OuyaFacadeRequest* callbacks.
  OUYA_FACADE_NO_ERROR is success, 1-999 are HTTP status codes, >999
  are internal error codes.  
*/
enum  OuyaFacadeError
{
  OUYA_FACADE_ERROR_CANCELLED = -1,
  OUYA_FACADE_ERROR_NONE = 0,
};

/*
 * @brief System data of the callback for OuyaFacadeRequestGamerUUID.
 */
struct  OuyaFacadeGamerUUIDResult
{
  int         error;
  const char*	pGamerUUID;
};

struct  OuyaFacadeReceipt
{
  const char* pProductId;
  int         priceInCents;
  uint64      purchaseDate;
  uint64      generatedDate;
};

/*
 * @brief System data of the callback for OuyaFacadeRequestReceipts.
 */
struct  OuyaFacadeReceiptsResult
{
  int                       error;
  int                       numReceipts;
  const OuyaFacadeReceipt*  parReceipt;
};

struct  OuyaFacadeProduct
{
  const char* pProductId;
  const char* pName;
  int         priceInCents;
};

/*
 * @brief System data of the callback for OuyaFacadeRequestProductList.
 */
struct  OuyaFacadeProductListResult
{
  int                       error;
  int                       numProducts;
  const OuyaFacadeProduct*  parProduct;
};

/*
 * @brief System data of the callback for OuyaFacadeRequestPurchase.
 */
struct	OuyaFacadePurchaseResult
{
  int               error;
  OuyaFacadeProduct productPurchased;
};

functions:
/*
 * @brief Initialises  the OuyaFacade.
 */
void  ouyaInit(const char* pDeveloperId, const char* pApplicationKey) run_on_os_thread

/*
 * @brief Terminates the OuyaFacade.
 */
void  ouyaTerm() run_on_os_thread

/*
 * @brief Tells you whether OuyaFacade was successfully initialised.
 */
int  ouyaFacadeIsInitialised()

/*
 * @brief Tells you whether the app is running on OUYA hardware.
 */
int  ouyaFacadeIsRunningOnOUYAHardware()

/*
 * @brief Attempts to retrieve and return a @a pValue stored under @a pKey.
 */
void  ouyaFacadeGetGameData(const char* pKey, char* pBuffer, int bufferSize)

/*
 * @brief Stores a @a pValue string under @a pKey. How long it will be persisted will depend on its size and usage.
 */
void  ouyaFacadePutGameData(const char* pKey, const char* pValue);

/*
 * @brief Sets OuyaFacade to test mode for the intents of purposes of
          purchases and purchase history.
 */
void  ouyaFacadeSetTestMode()

/*
 * @brief Requests the UUID for the current account. The system data parameter
 *        of the callback will point to an OuyaFacadeGamerUUIDResult object.
 */
s3eResult  ouyaFacadeRequestGamerUUID(s3eCallback pCallback, void* pUserData)

/*
 * @brief Requests the receipts for the current account and app. The system
 *        data parameter of the callback will point to an
 *        OuyaFacadeReceiptsResult object.
 */
s3eResult  ouyaFacadeRequestReceipts(s3eCallback pCallback, void* pUserData)

/*
 * @brief Requests information for the given list of purchasables. The system
 *        data parameter of the callback will point to an
 *        OuyaFacadeProductListResult object.
 */
s3eResult  ouyaFacadeRequestProductList(const char** parPurchasable,  int numPurchasables, s3eCallback pCallback, void* pUserData)

/*
 * @brief Requests the purchase of the the given purchasable. The system data
 *        parameter of the callback will point to an OuyaFacadePurchaseResult
 *        object.
 */
s3eResult  ouyaFacadeRequestPurchase(const char* pPurchasable, s3eCallback pCallback, void* pUserData)

/*
 * @brief Registers a controller event handler for the given event type.
 *        The system data parameter of the callback will point to objects type
 *        corresponding the event type.
 */
s3eResult  ouyaControllerRegister(OuyaControllerEvent type, s3eCallback pCallback, void* pUserData)

/*
 * @brief Unregisters the given controller event handler for the given event
 *        type.
 */
s3eResult  ouyaControllerUnRegister(OuyaControllerEvent type, s3eCallback pCallback)

/*
 * @brief Gives you the state of the given @a button on the given
 *        @a controller.
 */
int  ouyaControllerGetButtonState(uint32 controller, uint32 button)

/*
 * @brief Gives you the state of the given @axis on the given @a controller.
 */
float ouyaControllerGetAxis(uint32 controller, uint32 axis)
